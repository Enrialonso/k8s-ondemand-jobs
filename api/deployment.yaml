apiVersion: v1
kind: ServiceAccount
metadata:
  name: flask-api-service-account

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: flask-api-role
  namespace: default
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "list" ]
  - apiGroups: [ "batch", "extensions" ]
    resources: [ "jobs" ]
    verbs: [ "create" ]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: list-pods-sa
  namespace: default
roleRef:
  kind: Role
  name: flask-api-role
  apiGroup: rbac.authorization.k8s.io
subjects:
  - kind: ServiceAccount
    name: flask-api-service-account
    namespace: default

---

apiVersion: v1
kind: Service
metadata:
  name: service-flask-api
spec:
  type: NodePort
  ports:
    - port: 8000
      targetPort: 8000
      nodePort: 30000
  selector:
    app: flask-api

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-api
spec:
  selector:
    matchLabels:
      app: flask-api
  replicas: 2
  template:
    metadata:
      labels:
        app: flask-api
    spec:
      serviceAccountName: flask-api-service-account
      containers:
        - name: flask-api
          image: flask-api
          imagePullPolicy: Never # Use this for pull image locally
          readinessProbe:
            httpGet:
              path: /status
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8000
            initialDelaySeconds: 15
            periodSeconds: 20
          ports:
            - containerPort: 8000